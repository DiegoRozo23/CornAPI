// <auto-generated />
using System;
using API_Contro_Plagas.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Contro_Plagas.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240426004519_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Contro_Plagas.Models.Crop", b =>
                {
                    b.Property<int>("IdCrop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCrop"));

                    b.Property<int>("IdTypeCrop")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("IdCrop");

                    b.HasIndex("IdTypeCrop");

                    b.HasIndex("IdUser");

                    b.ToTable("Crop");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.EvolutionCrop", b =>
                {
                    b.Property<int>("IdEvolutionCrop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvolutionCrop"));

                    b.Property<int>("IdCrop")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Record")
                        .HasColumnType("datetime2");

                    b.HasKey("IdEvolutionCrop");

                    b.HasIndex("IdCrop");

                    b.ToTable("EvolutionCrop");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.Extermination", b =>
                {
                    b.Property<int>("IdExtermination")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExtermination"));

                    b.Property<int>("IdCrop")
                        .HasColumnType("int");

                    b.Property<int>("IdPesticide")
                        .HasColumnType("int");

                    b.Property<int>("IdPlague")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Record")
                        .HasColumnType("datetime2");

                    b.HasKey("IdExtermination");

                    b.HasIndex("IdCrop");

                    b.HasIndex("IdPesticide");

                    b.HasIndex("IdPlague");

                    b.ToTable("Extermination");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.Pesticide", b =>
                {
                    b.Property<int>("IdPesticide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPesticide"));

                    b.Property<int>("IdSupplier")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPesticide");

                    b.HasIndex("IdSupplier");

                    b.ToTable("Pesticide");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.Plague", b =>
                {
                    b.Property<int>("IdPlague")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlague"));

                    b.Property<int>("IdTypePlague")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPlague");

                    b.HasIndex("IdTypePlague");

                    b.ToTable("Plague");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.Supplier", b =>
                {
                    b.Property<int>("IdSupplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSupplier"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SupplierAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuppplierPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSupplier");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.TypeCrop", b =>
                {
                    b.Property<int>("IdTypeCrop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypeCrop"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TypeCropName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTypeCrop");

                    b.ToTable("TypeCrop");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.TypePlague", b =>
                {
                    b.Property<int>("IdTypePlague")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypePlague"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TypePlagueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTypePlague");

                    b.ToTable("TypePlague");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.TypeUser", b =>
                {
                    b.Property<int>("IdTypeUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypeUser"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TypeUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTypeUser");

                    b.ToTable("TypeUser");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<int>("IdTypeUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdTypeUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.Crop", b =>
                {
                    b.HasOne("API_Contro_Plagas.Models.TypeCrop", "TypeCrop")
                        .WithMany()
                        .HasForeignKey("IdTypeCrop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Contro_Plagas.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeCrop");

                    b.Navigation("User");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.EvolutionCrop", b =>
                {
                    b.HasOne("API_Contro_Plagas.Models.Crop", "Crop")
                        .WithMany()
                        .HasForeignKey("IdCrop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crop");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.Extermination", b =>
                {
                    b.HasOne("API_Contro_Plagas.Models.Crop", "Crop")
                        .WithMany()
                        .HasForeignKey("IdCrop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Contro_Plagas.Models.Pesticide", "Pesticide")
                        .WithMany()
                        .HasForeignKey("IdPesticide")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Contro_Plagas.Models.Plague", "Plague")
                        .WithMany()
                        .HasForeignKey("IdPlague")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crop");

                    b.Navigation("Pesticide");

                    b.Navigation("Plague");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.Pesticide", b =>
                {
                    b.HasOne("API_Contro_Plagas.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("IdSupplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.Plague", b =>
                {
                    b.HasOne("API_Contro_Plagas.Models.TypePlague", "TypePlague")
                        .WithMany()
                        .HasForeignKey("IdTypePlague")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypePlague");
                });

            modelBuilder.Entity("API_Contro_Plagas.Models.User", b =>
                {
                    b.HasOne("API_Contro_Plagas.Models.TypeUser", "TypeUser")
                        .WithMany()
                        .HasForeignKey("IdTypeUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeUser");
                });
#pragma warning restore 612, 618
        }
    }
}
